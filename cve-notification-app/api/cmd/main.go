package main

import (
	"log"
	"net/http"
	"os"

	customHandlers "github.com/Miso-Code/buildpacks-ci/cve-notification-app/api/handlers"
	"github.com/Miso-Code/buildpacks-ci/cve-notification-app/api/middleware"
	"github.com/Miso-Code/buildpacks-ci/cve-notification-app/api/utils"
	"github.com/gorilla/handlers"
	"github.com/gorilla/mux"
)

func main() {
	jwtKeyStr, _ := os.LookupEnv("JWT_KEY")
	utils.SetJWTKey([]byte(jwtKeyStr))

	r := mux.NewRouter()
	r.Use(middleware.JWTMiddleware)

	r.HandleFunc("/", customHandlers.HomeHandler).Methods("GET")
	r.HandleFunc("/hello/{name}", customHandlers.HelloHandler).Methods("GET")
	r.HandleFunc("/login", customHandlers.LoginHandler).Methods("POST")
	r.HandleFunc("/signup", customHandlers.SignupHandler).Methods("POST")
	r.HandleFunc("/tracked-deps", customHandlers.TrackedDepsHandler).Methods("GET")

	// Protected routes
	r.HandleFunc("/user-dependencies", customHandlers.UserDependenciesHandler).Methods("GET")
	r.HandleFunc("/user-dependencies", customHandlers.UpdateDependenciesHandler).Methods("PATCH")

	credentials := handlers.AllowCredentials()
	headers := handlers.AllowedHeaders([]string{"X-Requested-With", "Content-Type", "Authorization"})
	methods := handlers.AllowedMethods([]string{"POST", "GET", "PATCH", "OPTIONS"})
	origins := handlers.AllowedOrigins([]string{"http://localhost:5173", "http://localhost:3000"})

	log.Println("Server listening on port 8000")
	log.Fatal(http.ListenAndServe(":8000", handlers.CORS(credentials, headers, methods, origins)(r)))
}
