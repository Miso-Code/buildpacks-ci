package commands

import (
	"fmt"

	"github.com/Miso-Code/buildpacks-ci/cve-notification-app/common"
	"github.com/Miso-Code/buildpacks-ci/cve-notification-app/core"
	"github.com/Miso-Code/buildpacks-ci/cve-notification-app/services"
	Utils "github.com/Miso-Code/buildpacks-ci/cve-notification-app/utils"
	"github.com/spf13/cobra"
)

// FillDBCommand creates a new fill-db command
func FillDBCommand() *cobra.Command {
	cmd := &cobra.Command{
		Use:   "fill-db",
		Short: "Fill the database with CVEs",
		Long:  `This command fills the database with CVEs.`,
		Run: func(cmd *cobra.Command, args []string) {
			fillDatabase()
		},
	}

	return cmd
}

// fillDB is the function that actually performs the fill-db task
func fillDatabase() {
	config, configExists := Utils.GetConfigFile()
	if !configExists {
		return
	}

	librariesUtil := common.LibrariesUtil{
		MongoLibrary:     services.NewMongoLibrary(config.DbUri),
		NvdNistLibrary:   services.NewNVDNistLibrary(config.NvdNistApiKey),
		CSVReaderLibrary: services.CSVReaderLibrary{},
		SlackLibrary:     services.SlackLibrary{},
	}

	err := core.FillDatabase(librariesUtil)
	if err != nil {
		fmt.Println(fmt.Sprintf("Error filling the database: %s", err.Error()))
		return
	}

	fmt.Println("Database filled.")
}
