/* eslint-disable @typescript-eslint/no-explicit-any */
import axios from 'axios';
import { Dependency, DependencyWithIntegration } from '../context';

const BASE_URL = import.meta.env.VITE_API_URL as string || 'http://localhost:8000';

const axiosInstance = axios.create({
    baseURL: BASE_URL,
    headers: {
        'Content-Type': 'application/json',
    }
});

async function getAllDependencies(): Promise<Dependency[]> {
    console.log('getAllDependencies called');
    const res = await axiosInstance.get('/tracked-deps');
    return res.data.cves as Dependency[];
}

async function login(username: string, password: string): Promise<string> {
    console.log('login called');
    const res = await axiosInstance.post('/login', { username, password });
    return res.data.token;
}

async function register(username: string, password: string): Promise<any> {
    console.log('register called');
    return axiosInstance.post('/signup', { username, password });
}

async function getUserDependencies(token:string): Promise<DependencyWithIntegration[]> {
    console.log('getUserDependencies called');
    const res = await axiosInstance.get('/user-dependencies',{
        headers: {
            Authorization: `Bearer ${token}`
        }
    });
    return res.data.user_dependencies.dependencies_with_integration as DependencyWithIntegration[];
}

async function updateUserDependencies(token:string, dependencies: DependencyWithIntegration[]): Promise<void> {
    console.log('updateUserDependencies called');
    await axiosInstance.patch('/user-dependencies', dependencies, {
        headers: {
            Authorization: `Bearer ${token}`
        }
    });
}

export { getAllDependencies, login, register, getUserDependencies, updateUserDependencies };
