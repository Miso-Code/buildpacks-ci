import React, { useState, useContext } from 'react';
import { Button, TextField, Box, Typography, Snackbar, Alert, Link } from '@mui/material';
import { useNavigate } from "react-router-dom";
import { Context } from '../context';
import { login } from "../services";

const Login: React.FC = () => {
    const [username, setUsername] = useState('');
    const [password, setPassword] = useState('');
    const [openSnackbar, setOpenSnackbar] = useState(false);
    const [snackbarMessage, setSnackbarMessage] = useState('');

    const { setUser } = useContext(Context);
    const navigate = useNavigate();

    const handleLogin = async () => {
        try {
            const token = await login(username, password);
            const user = { username, token };
            if (setUser) {
                setUser(user);
            }
            localStorage.setItem('user', JSON.stringify(user));
            navigate('/dashboard');
        } catch (error) {
            console.error('Login failed', error);
            setSnackbarMessage('Wrong username or password');
            setOpenSnackbar(true);
        }
    };

    const handleCloseSnackbar = () => {
        setOpenSnackbar(false);
    };

    const handleRegister = () => navigate('/register');

    return (
        <>
            <Box
                display="flex"
                justifyContent="center"
                alignItems="center"
                minHeight="100vh"
                sx={{
                    padding: 3,
                    background: 'linear-gradient(to right, #ece9e6, #ffffff)',
                }}
            >
                <Box
                    display="flex"
                    flexDirection="column"
                    gap={2}
                    px={4}
                    py={2}
                    border="1px solid #ccc"
                    borderRadius={1}
                    width="100%"
                    maxWidth="400px"
                    boxShadow={3}
                    bgcolor="background.paper"
                >
                    <Typography variant="h4" align="center" gutterBottom>
                        Login
                    </Typography>
                    <TextField
                        label="Username"
                        value={username}
                        onChange={(e) => setUsername(e.target.value)}
                        fullWidth
                        margin="normal"
                    />
                    <TextField
                        label="Password"
                        type="password"
                        value={password}
                        onChange={(e) => setPassword(e.target.value)}
                        fullWidth
                        margin="normal"
                    />
                    <Button
                        variant="contained"
                        onClick={handleLogin}
                        disabled={!username || !password}
                        fullWidth
                        sx={{ mt: 2 }}
                        color="primary"
                    >
                        Login
                    </Button>
                    <Typography align="center" sx={{ mt: 2 }}>
                        Not a user? <Link href="#" onClick={handleRegister}>Register</Link>
                    </Typography>
                </Box>
            </Box>
            <Snackbar
                anchorOrigin={{ vertical: 'top', horizontal: 'center' }}
                open={openSnackbar}
                onClose={handleCloseSnackbar}
            >
                <Alert
                    onClose={handleCloseSnackbar}
                    severity="error"
                    variant="filled"
                    sx={{ width: '100%' }}
                >
                    {snackbarMessage}
                </Alert>
            </Snackbar>
        </>
    );
};

export default Login;
