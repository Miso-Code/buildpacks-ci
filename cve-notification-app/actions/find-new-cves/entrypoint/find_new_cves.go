package main

import (
	"fmt"
	"github.com/Miso-Code/buildpacks-ci/cve-notification-app/common"
	"github.com/Miso-Code/buildpacks-ci/cve-notification-app/core"
	"github.com/Miso-Code/buildpacks-ci/cve-notification-app/services"
	"github.com/jessevdk/go-flags"
	"os"
)

func main() {

	var opts struct {
		DBUri           string `long:"db-uri" description:"Database URI" required:"true"`
		SlackWebhookUrl string `long:"webhook-url" description:"Slack webhook URL" required:"true"`
		NVDNistApiKey   string `long:"nvd-nist-api-key" description:"NVD Nist API Key" required:"true"`
	}

	_, err := flags.Parse(&opts)
	if err != nil {
		os.Exit(1)
	}

	allUtils := common.LibrariesUtil{
		MongoLibrary:   services.NewMongoLibrary(opts.DBUri),
		NvdNistLibrary: services.NewNVDNistLibrary(opts.NVDNistApiKey),
		SlackLibrary:   services.NewSlackLibrary(opts.SlackWebhookUrl),
	}

	newCves, err := core.FindNewCVEs(allUtils)

	if err != nil {
		fmt.Println(err)
		os.Exit(1)
	}

	fmt.Println(newCves)
}
