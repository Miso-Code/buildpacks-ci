package main

import (
	"fmt"
	"github.com/Miso-Code/buildpacks-ci/cve-notification-app/common"
	"github.com/Miso-Code/buildpacks-ci/cve-notification-app/core"
	"github.com/Miso-Code/buildpacks-ci/cve-notification-app/services"
	"github.com/jessevdk/go-flags"
	"os"
	"strings"
)

func main() {
	var opts struct {
		DBUri         string `long:"db-uri" description:"Database URI" required:"true"`
		DepList       string `long:"dep-list" description:"Path to dependencies.csv file" required:"true"`
		NVDNistApiKey string `long:"nvd-nist-api-key" description:"NVD Nist API Key" required:"true"`
	}

	_, err := flags.Parse(&opts)
	if err != nil {
		os.Exit(1)
	}

	allUtils := common.LibrariesUtil{
		MongoLibrary:     services.NewMongoLibrary(opts.DBUri),
		CSVReaderLibrary: services.NewCSVReaderLibrary(opts.DepList),
		NvdNistLibrary:   services.NewNVDNistLibrary(opts.NVDNistApiKey),
	}

	addedDeps, removedDeps, err := core.UpdateTrackedDependencies(allUtils)
	result := ""

	if len(addedDeps) == 0 {
		result += "****Added dependencies:**** \nNone\n"
	} else {
		result += fmt.Sprintf("****Added dependencies:****\n%s\n", strings.Join(addedDeps, "\n"))
	}

	if len(removedDeps) == 0 {
		result += "****Removed dependencies:**** \nNone\n"
	} else {
		result += fmt.Sprintf("****Removed dependencies:****\n%s\n", strings.Join(removedDeps, "\n"))
	}
}
